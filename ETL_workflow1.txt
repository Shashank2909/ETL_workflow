use role sysadmin;

create database workflow;
-- create landing, curated and consumption layers (schemas)
create schema landing_zone;
create schema curated_zone;
create schema consumption_zone;

-- load history data in landing_zone tables
use schema landing_zone;
create or replace table customer(CUSTOMER_ID varchar(50),SALUTATION varchar(50),FIRST_NAME varchar(50),LAST_NAME varchar(50),
                                 BIRTH_DAY varchar(50),BIRTH_MONTH varchar(50),BIRTH_YEAR varchar(50),
                                 BIRTH_COUNTRY varchar(50),EMAIL_ADDRESS varchar(50));
                                 
create or replace table item(ITEM_ID varchar(50),ITEM_DESC varchar,START_DATE varchar(50),END_DATE varchar(50),
                             PRICE varchar(50),ITEM_CLASS varchar(50),ITEM_CATEGORY varchar(50));
                             
create or replace table orders(ORDER_DATE varchar(50),ORDER_TIME varchar(50),ITEM_ID varchar(50),ITEM_DESC varchar,
                              CUSTOMER_ID varchar(50),SALUTATION varchar(50),FIRST_NAME varchar(50),
                              LAST_NAME varchar(50),STORE_ID varchar(50),STORE_NAME varchar(50),ORDER_QUANTITY varchar(50),SALE_PRICE varchar(50),
                              DISOUNT_AMT varchar(50),COUPON_AMT varchar(50),
                              NET_PAID varchar(50),NET_PAID_TAX varchar(50),NET_PROFIT varchar(50));
                              
show tables;

create or replace file format csv_landing
field_delimiter=','
record_delimiter='\n'
skip_header=1
field_optionally_enclosed_by = '\042';

---------- curated zone ------------------
use schema curated_zone;
create or replace transient table curated_customer (
      customer_pk number autoincrement,
      customer_id varchar(18),
      salutation varchar(10),
      first_name varchar(20),
      last_name varchar(30),
      birth_day number,
      birth_month number,
      birth_year number,
      birth_country varchar(20),
      email_address varchar(50)
) comment ='this is customer table with in curated schema';
    
create or replace transient table curated_item (
      item_pk number autoincrement,
      item_id varchar(16),
      item_desc varchar,
      start_date date,
      end_date date,
      price number(7,2),
      item_class varchar(50),
      item_category varchar(50)
) comment ='this is item table with in curated schema';

create or replace transient table curated_order (
      order_pk number autoincrement,
      order_date date,
      order_time varchar,
      item_id varchar(16),
      item_desc varchar,
      customer_id varchar(18),
      salutation varchar(10),
      first_name varchar(20),
      last_name varchar(30),
      store_id varchar(16),
      store_name VARCHAR(50),
      order_quantity number,
      sale_price number(7,2),
      disount_amt number(7,2),
      coupon_amt number(7,2),
      net_paid number(7,2),
      net_paid_tax number(7,2),
      net_profit number(7,2)
) comment ='this is order table with in curated schema';
                              
show tables;

-- insert history data in curated tables first time load

insert into workflow.curated_zone.curated_customer (
      customer_id ,
      salutation ,
      first_name ,
      last_name ,
      birth_day ,
      birth_month ,
      birth_year ,
      birth_country ,
      email_address ) 
select 
      customer_id ,
      salutation ,
      first_name ,
      last_name ,
      birth_day ,
      birth_month ,
      birth_year ,
      birth_country ,
      email_address 
from workflow.landing_zone.customer;

insert into workflow.curated_zone.curated_item (
        item_id,
        item_desc,
        start_date,
        end_date,
        price,
        item_class,
        item_category) 
select 
        item_id,
        item_desc,
        start_date,
        end_date,
        price,
        item_class,
        item_category
from workflow.landing_zone.item;

insert into workflow.curated_zone.curated_order (
      order_date ,
      order_time ,
      item_id ,
      item_desc ,
      customer_id ,
      salutation ,
      first_name ,
      last_name ,
      store_id ,
      store_name ,
      order_quantity ,
      sale_price ,
      disount_amt ,
      coupon_amt ,
      net_paid ,
      net_paid_tax ,
      net_profit) 
select 
      order_date ,
      order_time ,
      item_id ,
      item_desc ,
      customer_id ,
      salutation ,
      first_name ,
      last_name ,
      store_id ,
      store_name ,
      order_quantity ,
      sale_price ,
      disount_amt ,
      coupon_amt ,
      net_paid ,
      net_paid_tax ,
      net_profit  
from workflow.landing_zone.orders;
use schema curated_zone;
select count(*) from curated_item;

--- consumtion zone
use schema consumption_zone;

create or replace table item_dim (
        item_dim_key number autoincrement,
        item_id varchar(16),
        item_desc varchar,
        start_date date,
        end_date date,
        price number(7,2),
        item_class varchar(50),
        item_category varchar(50),
        added_timestamp timestamp default current_timestamp() , --- extra columns added in consumtion zone tables
        updated_timestamp timestamp default current_timestamp() ,
        active_flag varchar(1) default 'Y'
) comment ='this is item table with in consumption schema';

create or replace table customer_dim (
        customer_dim_key number autoincrement,
        customer_id varchar(18),
        salutation varchar(10),
        first_name varchar(20),
        last_name varchar(30),
        birth_day number,
        birth_month number,
        birth_year number,
        birth_country varchar(20),
        email_address varchar(50),
        added_timestamp timestamp default current_timestamp() ,
        updated_timestamp timestamp default current_timestamp() ,
        active_flag varchar(1) default 'Y'
) comment ='this is customer table with in consumption schema';
    
create or replace table order_fact (
      order_fact_key number autoincrement,
      order_date date,
      customer_dim_key number,
      item_dim_key number,
      order_count number,
      order_quantity number,
      sale_price number(20,2),
      disount_amt number(20,2),
      coupon_amt number(20,2),
      net_paid number(20,2),
      net_paid_tax number(20,2),
      net_profit number(20,2)
) comment ='this is order table with in consumption schema';
    
-- insert data in consumption layers

insert into workflow.consumption_zone.item_dim (
        item_id,
        item_desc,
        start_date,
        end_date,
        price,
        item_class,
        item_category) 
select 
        item_id,
        item_desc,
        start_date,
        end_date,
        price,
        item_class,
        item_category
from workflow.curated_zone.curated_item;

insert into workflow.consumption_zone.customer_dim (
        customer_id ,
        salutation ,
        first_name ,
        last_name ,
        birth_day ,
        birth_month ,
        birth_year ,
        birth_country ,
        email_address ) 
select 
        customer_id ,
        salutation ,
        first_name ,
        last_name ,
        birth_day ,
        birth_month ,
        birth_year ,
        birth_country ,
        email_address 
from workflow.curated_zone.curated_customer;

insert into workflow.consumption_zone.order_fact (
      order_date,
      customer_dim_key ,
      item_dim_key ,
      order_count,
      order_quantity ,
      sale_price ,
      disount_amt ,
      coupon_amt ,
      net_paid ,
      net_paid_tax ,
      net_profit 
) 
select 
      co.order_date,
      cd.customer_dim_key ,
      id.item_dim_key,
      count(1) as order_count,
      sum(co.order_quantity) ,
      sum(co.sale_price) ,
      sum(co.disount_amt) ,
      sum(co.coupon_amt) ,
      sum(co.net_paid) ,
      sum(co.net_paid_tax) ,
      sum(co.net_profit)  
from workflow.curated_zone.curated_order co 
join workflow.consumption_zone.customer_dim cd on cd.customer_id = co.customer_id
join workflow.consumption_zone.item_dim id on id.item_id = co.item_id 
group by 
        co.order_date,
        cd.customer_dim_key,
        id.item_dim_key
order by co.order_date;
        
use  schema consumption_zone;      
select * from order_fact;



















                              
                              
                              
                              
